1. Find the albums recorded by the artist Queen.

$ Artist.where(name: 'Queen')

=> #<ActiveRecord::Relation [#<Artist id: 51, name: "Queen", created_at: "2006-01-08 22:57:01", updated_at: "2014-01-29 22:10:22">]>

$ Album.where(artist_id: 51)

=> #<ActiveRecord::Relation [#<Album id: 36, artist_id: 51, title: "Greatest Hits II", created_at: "2008-01-30 14:00:12", updated_at: "2014-01-29 22:14:02">, #<Album id: 185, artist_id: 51, title: "Greatest Hits I", created_at: "2007-12-29 12:02:13", updated_at: "2014-01-29 22:14:02">, #<Album id: 186, artist_id: 51, title: "News Of The World", created_at: "2010-06-23 20:50:06", updated_at: "2014-01-29 22:14:02">]>

__________________________________________________________________________
2. Count how many tracks belong to the media type "Protected MPEG-4 video file".

$ Track.where(media_type_id: MediaType.where(name: 'Protected MPEG-4 video file')).count

=> 214
__________________________________________________________________________
3. Find the genre with the name "Hip Hop/Rap".

$ Genre.find_by(name: "Hip Hop/Rap")

=> #<Genre id: 17, name: "Hip Hop/Rap", created_at: "2013-01-20 02:04:31", updated_at: "2014-01-29 22:14:08">
__________________________________________________________________________
4. Count how many tracks belong to the "Hip Hop/Rap" genre

$ Track.where(genre_id: Genre.where(name: "Hip Hop/Rap")).count

=> 35
__________________________________________________________________________
5. Find the total amount of time required to listen to all the tracks in the database.

$ Track.sum(:milliseconds)/1000/60/60

=> 382 (NOTE: Converted to hours for easy reading)
__________________________________________________________________________
6. Find the highest price of any track that has the media type "MPEG audio file".

$ Track.where(media_type_id: MediaType.where(name: "MPEG audio file")).maximum(:unit_price)

=> 0.99e0
__________________________________________________________________________
7. Find the name of the most expensive track that has the media type "MPEG audio file".

$ Track.where(unit_price: 0.99e0, media_type_id: MediaType.where(name: "MPEG audio file"))

=> #<ActiveRecord::Relation [#<Track id: 6, album_id: 1, genre_id: 1, media_type_id: 1, name: "Put The Finger On You", composer: "Angus Young, Malcolm Young, Brian Johnson", milliseconds: 205662, bytes: 6713451, unit_price: 0.99e0, created_at: "2005-01-03 05:49:26", updated_at: "2014-01-29 22:14:56"> ...]>
__________________________________________________________________________
8. Find the 2 oldest artists.

$ Artist.order(created_at: :asc).limit(2)

=> #<ActiveRecord::Relation [#<Artist id: 258, name: "Les Arts Florissants & William Christie", created_at: "2004-02-13 06:08:36", updated_at: "2014-01-29 22:10:22">, #<Artist id: 31, name: "Baby Consuelo", created_at: "2004-02-16 22:04:39", updated_at: "2014-01-29 22:10:22">]>
__________________________________________________________________________
9. Find the least expensive track that has the genre "Electronica/Dance".

$ Track.where(genre_id: Genre.where(name: "Electronica/Dance")).order(unit_price: :desc).limit(1)

=> #<ActiveRecord::Relation [#<Track id: 3319, album_id: 259, genre_id: 15, media_type_id: 1, name: "Instinto Colectivo", composer: nil, milliseconds: 300564, bytes: 12024875, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">]>

__________________________________________________________________________
10. Find all "MPEG audio file" tracks in the genre "Electronica/Dance".

$ Track.where(genre_id: Genre.where(name: "Electronica/Dance")).where(media_type_id: MediaType.where(name: "MPEG audio file"))

=> => #<ActiveRecord::Relation [#<Track id: 3319, album_id: 259, genre_id: 15, media_type_id: 1, name: "Instinto Colectivo", composer: nil, milliseconds: 300564, bytes: 12024875, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04"> ...]>
